<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>home on Ilmu Perpustakaan</title>
    <link>https://uin-ipi.github.io/</link>
    <description>Recent content in home on Ilmu Perpustakaan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 28 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://uin-ipi.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Install theme</title>
      <link>https://uin-ipi.github.io/docs/compose/install-theme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/docs/compose/install-theme/</guid>
      <description>Prerequisites First ensure that you have hugo installed.
You need a recent extended version (we recommend version 0.61 or later) of Hugo to do local builds and previews of sites (like this one) that uses this theme.
If you install from the release page, make sure to get the extended Hugo version, which supports sass; you may need to scroll down the list of releases to see it.
For comprehensive Hugo documentation, see gohugo.</description>
    </item>
    
    <item>
      <title>Use forestry CMS</title>
      <link>https://uin-ipi.github.io/docs/compose/use-forestry-cms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/docs/compose/use-forestry-cms/</guid>
      <description>Do you prefer managing your site using a CMS? Or would you like to make it easier for someone (a non-techie, perhaps) in your team to make edits easily? If interested, follow along. Else, skip to the next section
Let&amp;rsquo;s sync your site with forestry CMS.
Prerequisites !! Obviously you ought to have a github account. This is where your website source will live. Basically, forestry will read from github and write (commmit) to your github repo.</description>
    </item>
    
    <item>
      <title>Content organization</title>
      <link>https://uin-ipi.github.io/docs/compose/organize-content/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/docs/compose/organize-content/</guid>
      <description>This theme is primarily meant for documentation.
Documentation By default, the theme will look for all your documentation content within the docs directory.
However, if you would like to have your docs content across multiple directories, please list those directories inside config/_default/params.toml under docSections like so:
... docSections = [&amp;#34;docs&amp;#34;, &amp;#34;tutorials&amp;#34;] ... Unlike other regular pages, the documentation pages will have a left sidebar. This sidebar will list links to all the pages in the documentation pages.</description>
    </item>
    
    <item>
      <title>Shortcodes</title>
      <link>https://uin-ipi.github.io/docs/compose/shortcodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/docs/compose/shortcodes/</guid>
      <description>Instead of writing all your site pages from scratch, Hugo lets you define and use shortcodes.
Why shortcodes? While markdown is sufficient to produce simple pages, it&amp;rsquo;s insufficient where complex page structures are needed. Thusly, whenever we need special styling, shortcodes compliment the shortcomings of markdown.
This way, you can side step complex html and css boilerplate in your content files.
Sometimes, the shortcode will wrap content, sometimes it won&amp;rsquo;t. When content is wrapped, a closing shortcode tag is needed.</description>
    </item>
    
    <item>
      <title>Search Function</title>
      <link>https://uin-ipi.github.io/docs/compose/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/docs/compose/search/</guid>
      <description>Firstly, ensure you have these lines inside your config.toml file
[outputs] home = [&amp;#34;HTML&amp;#34;, &amp;#34;RSS&amp;#34;,&amp;#34;JSON&amp;#34;] Compose implements Fuse js or Algolia to enable search functionality. By default Fuse is applied. Algolia can be enabled by adding this settings to config/_default/params.toml file
# search [search] on = true global = false [search.algolia] enable = false # if false search will default to fusejs id = &amp;#34;Q40WQQX84U&amp;#34; # Application ID index = &amp;#34;compose&amp;#34; # Index name key = &amp;#34;da87401a458102ec6bbd6cc5e5cf8d95&amp;#34; # Search-Only API Key Both search engines will display results using the same UI.</description>
    </item>
    
    <item>
      <title>Mermaid</title>
      <link>https://uin-ipi.github.io/docs/compose/mermaid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/docs/compose/mermaid/</guid>
      <description>Mermaid is library that helps you generate diagrams, flowcharts, and piecharts from text in a similar manner as markdown.
With compose theme, you can use mermaid using a custom shortcode as follows:
Sequence Diagrams Snippet
{{&amp;lt; mermaid &amp;gt;}} sequenceDiagram participant Alice participant Bob Alice-&amp;gt;&amp;gt;John: Hello John, how are you? loop Healthcheck John-&amp;gt;&amp;gt;John: Fight against hypochondria end Note right of John: Rational thoughts&amp;lt;br/&amp;gt;prevail... John--&amp;gt;&amp;gt;Alice: Great! John-&amp;gt;&amp;gt;Bob: How about you? Bob--&amp;gt;&amp;gt;John: Jolly good!</description>
    </item>
    
    <item>
      <title>Graphs, charts &amp; dynamic tables</title>
      <link>https://uin-ipi.github.io/docs/compose/graphs-charts-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/docs/compose/graphs-charts-tables/</guid>
      <description>Using chart js library you can display data you have stored in a csv file as a pie chart, bar graph or doughnut chart.
At this point if you want to display data from a json or yaml file, you would need to convert it into csv first. Else the template will error out.
Once you have a csv file, you display the charts as follows:
Show a pie, doughnut &amp;amp; bar chart at once Firstly define the data you want to display from the front matter:</description>
    </item>
    
    <item>
      <title>Customize layouts &amp; components</title>
      <link>https://uin-ipi.github.io/docs/compose/customize/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/docs/compose/customize/</guid>
      <description>Shortcodes modifiers These modifiers are classes you can use with shortcodes to customize the look and feel of your layouts and components.
Grid modifier space grid-2 2 columns grid-3 3 columns grid-4 4 columns Spacing modifier space mt-1 1.5rem top margin mt-2 3rem top margin mt-3 4.5rem top margin mt-4 6rem top margin use pt-1 ~ pt-4 for top padding
modifier space mb-1 1.5rem bottom margin mb-2 3rem bottom margin mb-3 4.</description>
    </item>
    
    <item>
      <title>Getting started</title>
      <link>https://uin-ipi.github.io/docs/clarity/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/docs/clarity/getting-started/</guid>
      <description>Prerequisites Firstly, ensure you have installed the extended version of Hugo. See installation steps from Hugo&amp;rsquo;s official docs.
Getting up and running Read the prerequisites above and verify you&amp;rsquo;re using the extended version of Hugo. There are at least two ways of quickly getting started with Hugo and the VMware Clarity theme:
Option 1 (recommended) Generate a new Hugo site and add this theme as a Git submodule inside your themes folder:</description>
    </item>
    
    <item>
      <title>Leverage Github actions</title>
      <link>https://uin-ipi.github.io/docs/compose/github-actions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/docs/compose/github-actions/</guid>
      <description>This theme ships with 2 github actions inside the exampleSite folder:
AWS CI Algolia CI AWS CI This helps you to autodeploy your hugo website from github to an AWS s3 bucket. Set the secrets in the action accordingly and voila.
Algolia CI This action will automatically update your algolia search index. No extra npm manual setup will be needed.
These actions are customizable to fire off under your specified set of circumstances.</description>
    </item>
    
    <item>
      <title>Features</title>
      <link>https://uin-ipi.github.io/docs/clarity/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/docs/clarity/features/</guid>
      <description>Blog with tagging and category options
Deeplinks
Native Image Lazy Loading
Customizable (see config)
Dark Mode (with UI controls for user preference setting)
Toggleable table of contents
Flexible image configuration
Logo alignment
Mobile support with configurable menu alignment
Syntax Highlighting
Rich code block functions including:
Copy to clipboard Toggle line wrap (dynamic) Toggle line numbers Language label Toggle block expansion/contraction (dynamic) To put it all in context, here is a preview showing all functionality.</description>
    </item>
    
    <item>
      <title>Customization</title>
      <link>https://uin-ipi.github.io/docs/clarity/customize/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/docs/clarity/customize/</guid>
      <description>Configuration If set, jump over to the config.toml file and start configuring your site.
This section will mainly cover settings that are unique to this theme. If something is not covered here (or elsewhere in this file), there&amp;rsquo;s a good chance it is covered in this Hugo docs page.
Global Parameters These options set global values that some pages or all pages in the site use by default.
Parameter Value Type Overidable on Page author string no twitter string no largeTwitterCard boolean no ga_analytics string no description string yes introDescription string no numberOfTagsShown integer no fallBackOgImage file path (string) no codeMaxLines integer yes codeLineNumbers boolean yes mainSections array/string no centerLogo boolean no logo file path (string) no mobileNavigation string no figurePositionShow boolean yes figurePositionLabel string no customCSS array of file path (string) no customJS array of file path (string) no enforceLightMode boolean N/A enforceDarkMode boolean N/A titleSeparator string no comment boolean no Page Parameters These options can be set from a page frontmatter or via archetypes.</description>
    </item>
    
    <item>
      <title>Manipulating Images</title>
      <link>https://uin-ipi.github.io/docs/clarity/images/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/docs/clarity/images/</guid>
      <description>Images Image figure captions You have the option of adding captions to images in blog posts and automatically prepending a desired string such as &amp;ldquo;Figure N&amp;rdquo; to the alt text. This is controlled via two global settings.
figurePositionLabel is a string which will be prepended to any alt text of an article image. By default, this is set to &amp;ldquo;Figure.&amp;rdquo; And figurePositionShow controls, globally, whether to show this label. It does not affect whether to show the image alt text, only the prefix figure caption.</description>
    </item>
    
    <item>
      <title>Blogging</title>
      <link>https://uin-ipi.github.io/docs/clarity/blogging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/docs/clarity/blogging/</guid>
      <description>Blog directory Edit the config.toml file and change the blogDir key. Value will be name of the folder where the blog articles reside.
[params] ... blogDir = &amp;#34;blog&amp;#34; ... For more info, see the Hugo docs.
Mobile menu positioning The navigation menu when mobile browsing can be configured in config.toml to open right or left depending on preference. The &amp;ldquo;hamburger&amp;rdquo; menu icon will always display in the upper right hand corner regardless.</description>
    </item>
    
    <item>
      <title>Syntax Highlighting</title>
      <link>https://uin-ipi.github.io/docs/clarity/syntax-highlighting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/docs/clarity/syntax-highlighting/</guid>
      <description>Code Display line numbers Choose whether to display line numbers within a code block globally with the parameter codeLineNumbers setting to true or false.
[params] ... codeLineNumbers = true # Shows line numbers for all code blocks globally. ... Limit code block height You can globally control the number of lines which are displayed by default for your code blocks. Code which has the number of lines exceed this value will dynamically cause two code block expansion buttons to appear, allowing the user to expand to full length and contract.</description>
    </item>
    
    <item>
      <title>Theme Overrides</title>
      <link>https://uin-ipi.github.io/docs/clarity/theme-overrides/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/docs/clarity/theme-overrides/</guid>
      <description>Custom CSS and JS To minimize HTTP requests per page, we would recommend loading CSS styles and JavaScript helpers in single bundles. That is to say, one CSS file and one JavaScript file. Using Hugo minify functions, these files will be minified to optimize the size.
Going by the above 👆🏻 reason, we recommend adding custom CSS and JS via the custom SASS file (Compose, Clarity) and the custom JS file (Compose, Clarity).</description>
    </item>
    
    <item>
      <title>berita 2</title>
      <link>https://uin-ipi.github.io/news/berita-2/</link>
      <pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/news/berita-2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>berita 3</title>
      <link>https://uin-ipi.github.io/news/berita-3/</link>
      <pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/news/berita-3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>course 2</title>
      <link>https://uin-ipi.github.io/course/couse/</link>
      <pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/course/couse/</guid>
      <description></description>
    </item>
    
    <item>
      <title>berita 1</title>
      <link>https://uin-ipi.github.io/news/berita-1/</link>
      <pubDate>Sat, 28 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/news/berita-1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Module 1 Session 1</title>
      <link>https://uin-ipi.github.io/course/course-1/session-1/module-1/</link>
      <pubDate>Sat, 28 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/course/course-1/session-1/module-1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Module 1 Session 2</title>
      <link>https://uin-ipi.github.io/course/course-1/session-2/module-1/</link>
      <pubDate>Sat, 28 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/course/course-1/session-2/module-1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Module 1 Session 3</title>
      <link>https://uin-ipi.github.io/course/course-1/session-3/module-1/</link>
      <pubDate>Sat, 28 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/course/course-1/session-3/module-1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Module 2 Session 1</title>
      <link>https://uin-ipi.github.io/course/course-1/session-1/module-2/</link>
      <pubDate>Sat, 28 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/course/course-1/session-1/module-2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Module 2 Session 2</title>
      <link>https://uin-ipi.github.io/course/course-1/session-2/module-2/</link>
      <pubDate>Sat, 28 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/course/course-1/session-2/module-2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Module 2 Session 3</title>
      <link>https://uin-ipi.github.io/course/course-1/session-3/module-2/</link>
      <pubDate>Sat, 28 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/course/course-1/session-3/module-2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Search</title>
      <link>https://uin-ipi.github.io/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/search/</guid>
      <description></description>
    </item>
    
    <item>
      <title>test</title>
      <link>https://uin-ipi.github.io/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://uin-ipi.github.io/test/</guid>
      <description>test workflow</description>
    </item>
    
  </channel>
</rss>
